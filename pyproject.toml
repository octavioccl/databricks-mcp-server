[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "databricks-mcp"
version = "1.0.0"
description = "A comprehensive FastMCP server for Databricks workspaces with 35+ tools across 6 categories"
authors = ["Octavio Cuenca <occlhack@gmail.com>"]
maintainers = ["Octavio Cuenca <occlhack@gmail.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/databricks/databricks-mcp-server"
repository = "https://github.com/databricks/databricks-mcp-server"
documentation = "https://github.com/databricks/databricks-mcp-server/docs"
keywords = ["databricks", "mcp", "model-context-protocol", "sql", "unity-catalog", "fastmcp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis"
]
packages = [{include = "databricks_mcp", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
fastmcp = "^0.1.0"
mcp = {extras = ["cli"], version = "^1.0.0"}
databricks-sdk = "^0.18.0"
python-dotenv = "^1.0.0"
pydantic = "^2.5.0"
aiofiles = "^23.0.0"
httpx = "^0.27.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.10.0"
black = "^23.0.0"
flake8 = "^6.0.0"
mypy = "^1.0.0"
isort = "^5.12.0"
pre-commit = "^3.0.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.0"
mkdocs-material = "^9.0.0"
mkdocstrings = {extras = ["python"], version = "^0.20.0"}

[tool.poetry.group.test.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
coverage = "^7.0.0"

[tool.poetry.scripts]
databricks-mcp-server = "databricks_mcp.cli.main:main"
databricks-mcp = "databricks_mcp.cli.main:main"

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | __pycache__
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "databricks.*",
    "fastmcp.*",
    "mcp.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short"
]
testpaths = ["src/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["src/databricks_mcp"]
omit = [
    "src/tests/*",
    "*/test_*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".pytest_cache",
    ".mypy_cache"
] 